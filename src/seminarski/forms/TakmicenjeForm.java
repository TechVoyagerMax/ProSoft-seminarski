/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package seminarski.forms;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import seminarski.controller.Controller;
import seminarski.domain.*;
/**
 *
 * @author pc
 */
public class TakmicenjeForm extends javax.swing.JDialog {

    /**
     * Creates new form Proba
     */
    public TakmicenjeForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.setSize(800, 650);
        setTitle("Unos takmicenja");
        popuniComboNivo();
        popuniComboPredmet();
        popuniComboSkola();
        popuniComboRazred();
        comboRazred.addActionListener(event->{
            popuniComboUcenik((Razred)comboRazred.getSelectedItem());
        });
        txtDatumOdrzavanja.setText(LocalDate.now()+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboNivo = new javax.swing.JComboBox<>();
        comboPredmet = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        comboRazred = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboUcenik = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboSkola = new javax.swing.JComboBox<>();
        txtDatumOdrzavanja = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Unos takmicenja:");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel2.setText("nivo takmicenja:");

        jLabel3.setText("takmicenje iz predmeta:");

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("*");

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboNivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPredmet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboNivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboPredmet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel4.setText("takmicenje iz razreda:");

        comboRazred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRazredActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboRazred, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboRazred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(23, 23, 23))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel5.setText("ucenik koji se prijavljuje za takmicenje:");

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comboUcenik, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11)
                    .addComponent(comboUcenik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel6.setText("mesto odrzavanja:");

        jLabel7.setText("datum odrzavanja:");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("*");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboSkola, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumOdrzavanja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboSkola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDatumOdrzavanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSacuvaj)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnSacuvaj)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboRazredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRazredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboRazredActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        Takmicenje takm=new Takmicenje();
        if(proveraUnosa(takm)){
            takm.setPredmet((Predmet)comboPredmet.getSelectedItem());
            takm.setMesto_odrzavanja((Skola)comboSkola.getSelectedItem());
            takm.setNivo((NivoTakmicenja)comboNivo.getSelectedItem());
            takm.setDatum_odrzavanja(LocalDate.parse(txtDatumOdrzavanja.getText()));
            Takmicenje takmPost=vecPostojiTakmicenje(takm);
            if(takmPost==null){
                takm.setId(Controller.getInstance().kreirajTakmicenje(takm));
                if(takm.getId()!=0){
                   StavkaTakmicenja stavka=new StavkaTakmicenja();
                   stavka.setRazred((Razred)comboRazred.getSelectedItem());
                   stavka.setTakmicenje(takm);
                   stavka.setBroj_nagrada(0);
                   StavkaTakmicenja stavka_postoji=vecPostojiStavka(stavka);
                   if(stavka_postoji==null){
                       stavka.setId(Controller.getInstance().kreirajStavkuTakmicenja(takm, stavka));
                        if(stavka.getId()!=0){
                            StavkaStavkeTakmicenja stavka_stavke=new StavkaStavkeTakmicenja();
                            stavka_stavke.setStavka(stavka);
                            stavka_stavke.setTakmicenje(takm);
                            stavka_stavke.setUcenik((Ucenik)comboUcenik.getSelectedItem());
                            stavka_stavke.setRang(Rang.BEZ_RANGA);
                            stavka_stavke.setId(Controller.getInstance().kreirajStavkuStavku(takm, stavka, stavka_stavke));
                            if(stavka_stavke.getId()!=0){
                                JOptionPane.showMessageDialog(this, "Uspesno sacuvano");
                                int odg=JOptionPane.showConfirmDialog(this, "Novi unos?", "Potvrda",JOptionPane.YES_NO_OPTION);
                                if(odg==0){
                                    forAnotherInsert();
                                }else{
                                    this.setVisible(false);
                                }
                            }else{
                                JOptionPane.showMessageDialog(this, "Greska pri cuvanju u bazi stavke stavke","Greska",JOptionPane.ERROR_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Greska prilikom cuvanja u bazi stavke","Greska",JOptionPane.ERROR_MESSAGE);
                        }
                   }else{
                       StavkaStavkeTakmicenja st_stavke=new StavkaStavkeTakmicenja();
                       st_stavke.setStavka(stavka_postoji);
                       st_stavke.setTakmicenje(takm);
                       st_stavke.setUcenik((Ucenik)comboUcenik.getSelectedItem());
                       st_stavke.setRang(Rang.BEZ_RANGA);
                       st_stavke.setId(Controller.getInstance().kreirajStavkuStavku(takm, stavka_postoji, st_stavke));
                       if(st_stavke.getId()!=0){
                           JOptionPane.showMessageDialog(this, "Uspesno sacuvano");
                           int odg=JOptionPane.showConfirmDialog(this, "Novi unos?", "Potvrda",JOptionPane.YES_NO_OPTION);
                           if(odg==0){
                                forAnotherInsert();
                            }else{
                                this.setVisible(false);
                            }
                       }else{
                           JOptionPane.showMessageDialog(this, "Greska prilikom cuvanja u bazi 4","Greska",JOptionPane.ERROR_MESSAGE);
                       }
                   }
                   
                }else{
                    JOptionPane.showMessageDialog(this, "Greska pri cuvanju u bazi takmicenja","Greska",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                StavkaTakmicenja stav=new StavkaTakmicenja();
                stav.setRazred((Razred)comboRazred.getSelectedItem());
                stav.setTakmicenje(takmPost);
                stav.setBroj_nagrada(0);
                StavkaTakmicenja require=vecPostojiStavka(stav);
                if(require==null){
                    stav.setId(Controller.getInstance().kreirajStavkuTakmicenja(takmPost, stav));
                    if(stav.getId()!=0){
                        StavkaStavkeTakmicenja nova_stavkaStavke=new StavkaStavkeTakmicenja();
                        nova_stavkaStavke.setTakmicenje(takmPost);
                        nova_stavkaStavke.setStavka(stav);
                        nova_stavkaStavke.setUcenik((Ucenik)comboUcenik.getSelectedItem());
                        nova_stavkaStavke.setRang(Rang.BEZ_RANGA);
                        nova_stavkaStavke.setId(Controller.getInstance().kreirajStavkuStavku(takmPost, stav, nova_stavkaStavke));
                        if(nova_stavkaStavke.getId()!=0){
                            JOptionPane.showMessageDialog(this, "Uspenso kreirano");
                            int odg=JOptionPane.showConfirmDialog(this, "Novi unos?", "Potvrda",JOptionPane.YES_NO_OPTION);
                            if(odg==0){
                                forAnotherInsert();
                           }else{
                                this.setVisible(false);
                           }
                        }else{
                            JOptionPane.showMessageDialog(this, "Greska prilikom cuvanje stavke 2 u bazi","Greska",JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Greska prilikom cuvanja stavke u bazi","Greska",JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    StavkaStavkeTakmicenja ssss=new StavkaStavkeTakmicenja();
                    ssss.setStavka(require);
                    ssss.setTakmicenje(takmPost);
                    ssss.setUcenik((Ucenik)comboUcenik.getSelectedItem());
                    ssss.setRang(Rang.BEZ_RANGA);
                    ssss.setId(Controller.getInstance().kreirajStavkuStavku(takmPost, require, ssss));
                    if(ssss.getId()!=0){
                        JOptionPane.showMessageDialog(this, "Uspesno sacuvano!");
                        int odg = JOptionPane.showConfirmDialog(this, "Novi unos?", "Potvrda", JOptionPane.YES_NO_OPTION);
                        if (odg == 0) {
                            forAnotherInsert();
                        } else {
                            this.setVisible(false);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this,"Greska prilikom cuvanja stavke 3 u bazi","Greska",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Obavezno je uneti sva polja!","Greska",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakmicenjeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakmicenjeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakmicenjeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakmicenjeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TakmicenjeForm dialog = new TakmicenjeForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    private void popuniComboNivo(){
        ArrayList<NivoTakmicenja> list=Controller.getInstance().vratiListuSviNivoiTakmicenja();
        for(NivoTakmicenja i:list){
            comboNivo.addItem(i);
        }
        comboNivo.setSelectedItem(null);
    }
    
    private void popuniComboPredmet(){
        ArrayList<Predmet> lista=Controller.getInstance().vratiListuSviPredmet();
        for(Predmet p:lista){
            comboPredmet.addItem(p);
        }
        comboPredmet.setSelectedItem(null);
    }
    
    private void popuniComboUcenik(Razred r){
        ArrayList<Ucenik> list=Controller.getInstance().vratiListuUcenik(r);
        for(Ucenik u:list){
            comboUcenik.addItem(u);
        }
        comboUcenik.setSelectedItem(null);
    }
    
    private void popuniComboRazred(){
        ArrayList<Razred> list=Controller.getInstance().vratiListuSviRazred();
        for(Razred r:list){
            comboRazred.addItem(r);
        }
        comboRazred.setSelectedItem(null);
    }
    
    private void popuniComboSkola(){
        ArrayList<Skola> lista=Controller.getInstance().vratiListuSviSkola();
        for(Skola s:lista){
            comboSkola.addItem(s);
        }
        comboSkola.setSelectedItem(null);
    }
    
    private void forAnotherInsert(){
        txtDatumOdrzavanja.setEnabled(false);
    }
    
    
    private Takmicenje vecPostojiTakmicenje(Takmicenje takm){
        ArrayList<Takmicenje> svi=Controller.getInstance().vratiListuSviTakmicenja();
        for(Takmicenje t:svi){
            if(t.getNivo().getNaziv().equals(takm.getNivo().getNaziv()) && t.getPredmet().getNaziv().equals(takm.getPredmet().getNaziv())){
                return t;
            }
        }
        return null;
    }
    
    private StavkaTakmicenja vecPostojiStavka(StavkaTakmicenja stavka){
        ArrayList<StavkaTakmicenja> sve=Controller.getInstance().vratiListuSveStavkeTakmicenja();
        for(StavkaTakmicenja st:sve){
            if(st.getRazred().getRedni_broj()==stavka.getRazred().getRedni_broj()){
                return st;
            }
        }
        return null;
    }
    
    private boolean proveraUnosa(Takmicenje ta){
        if(comboNivo.getSelectedItem().equals(null) || comboPredmet.getSelectedItem().equals(null) || comboRazred.getSelectedItem().equals(null) || comboSkola.getSelectedItem().equals(null) || comboUcenik.getSelectedItem().equals(null)){
            return false;
        }
        
        if(!txtDatumOdrzavanja.getText().equals(String.valueOf(LocalDate.now()))){
            LocalDate ld=LocalDate.parse(txtDatumOdrzavanja.getText());
            if(ld.isBefore(LocalDate.now())){
                JOptionPane.showMessageDialog(this, "Nije moguce uneti datum koji je nakon danasnjeg!","Greska",JOptionPane.ERROR_MESSAGE);
                return false;
            }else{
                ta.setDatum_odrzavanja(ld);
                }
        }else{
            ta.setDatum_odrzavanja(LocalDate.parse(txtDatumOdrzavanja.getText()));
        }
        
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<NivoTakmicenja> comboNivo;
    private javax.swing.JComboBox<Predmet> comboPredmet;
    private javax.swing.JComboBox<Razred> comboRazred;
    private javax.swing.JComboBox<Skola> comboSkola;
    private javax.swing.JComboBox<Ucenik> comboUcenik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtDatumOdrzavanja;
    // End of variables declaration//GEN-END:variables
}
